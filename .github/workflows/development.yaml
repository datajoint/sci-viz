name: Development
on:
  pull_request:
  push:
jobs:
  test-changelog:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get changelog entry
        id: changelog_reader
        uses: guzman-raphael/changelog-reader-action@v5
        with:
          path: ./CHANGELOG.md
      - name: Verify changelog parsing
        env:
          TAG_NAME: ${{steps.changelog_reader.outputs.version}}
          RELEASE_NAME: Release ${{steps.changelog_reader.outputs.version}}
          BODY: ${{steps.changelog_reader.outputs.changes}}
          PRERELEASE: ${{steps.changelog_reader.outputs.status == 'prereleased'}}
          DRAFT: ${{steps.changelog_reader.outputs.status == 'unreleased'}}
        run: |
          echo "TAG_NAME=${TAG_NAME}"
          echo "RELEASE_NAME=${RELEASE_NAME}"
          echo "BODY=${BODY}"
          echo "PRERELEASE=${PRERELEASE}"
          echo "DRAFT=${DRAFT}"
  test:
    needs: test-changelog
    strategy:
      matrix:
        node-version: [14.x, 16.x]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: run jest testing
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: yarn test --coverage
  publish-docs:
    needs: test
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      - name: Deploy docs
        env:
          GOOGLE_ANALYTICS_KEY: ${{secrets.GOOGLE_ANALYTICS_KEY}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MODE: PUSH
        run: |
          export UPSTREAM_REPO=https://action-user:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          export HOST_UID=$(id -u)
          docker compose -f docs/docker-compose.yaml up --exit-code-from docs --build
  publish-release:
    if: |
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags') &&
      (
        github.repository_owner == 'datajoint' ||
        github.repository_owner == 'datajoint-company'
      )
    needs:
      - publish-docs
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{steps.create_gh_release.outputs.upload_url}}
    steps:
      - uses: actions/checkout@v2
      - name: Determine package version
        run: |
          DJSCIVIZ_VERSION=$(cat package.json | grep \"version\" | awk -F\" '{print $4}')
          echo "DJSCIVIZ_VERSION=${DJSCIVIZ_VERSION}" >> $GITHUB_ENV
      - name: Get changelog entry
        id: changelog_reader
        uses: guzman-raphael/changelog-reader-action@v5
        with:
          path: ./CHANGELOG.md
          version: ${{env.DJSCIVIZ_VERSION}}
      - name: Create GH release
        id: create_gh_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{steps.changelog_reader.outputs.version}}
          release_name: Release ${{steps.changelog_reader.outputs.version}}
          body: ${{steps.changelog_reader.outputs.changes}}
          prerelease: ${{steps.changelog_reader.outputs.status == 'prereleased'}}
          draft: ${{steps.changelog_reader.outputs.status == 'unreleased'}}
  publish-release-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          registry-url: "https://registry.npmjs.org/ana5377"
      - name: Install dependencies and build
        run: npm ci && npm run build
      - name: Publish package on NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  publish-images:
    if: |
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags') &&
      (
        github.repository_owner == 'datajoint' ||
        github.repository_owner == 'datajoint-company'
      )
    environment: docker
    needs: publish-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: get version
        run: |
          export DJSCIVIZ_VERSION=$(cat package.json | grep \"version\" | \
            awk -F\" '{print $4}')
          echo "DJSCIVIZ_VERSION=${DJSCIVIZ_VERSION}" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.docker_username}}
          password: ${{secrets.docker_password}}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: datajoint/sci-viz:${{env.DJSCIVIZ_VERSION}}
