#MODE=DEV HOST_UID="$(id -u)" PY_VER=3.8 IMAGE=djbase DISTRO=alpine PHARUS_VERSION=$(cat pharus/pharus/version.py | tail -1 | awk -F\" '{print $2}') docker compose up --build
version: '2.4'
services:
  sci-viz:
    build: .
    image: datajoint/sci-viz:2.3.1
    environment:
      CHOKIDAR_USEPOLLING: 'true'
      REACT_APP_DJSCIVIZ_BACKEND_PREFIX: '/api'
      DJSCIVIZ_SPEC_PATH: ./test/test_spec.yaml
    volumes:
      - .:/app
    # ports:
    #   - "3000:3000"
    networks:
      - main
    working_dir: /app
    user: node
    # use sci-viz-hotreload-prod.sh for production nginx deploment
    command:
      - sh
      - -lc
      - |
        if echo "${MODE}" | grep -i DEV &>/dev/null; then
          sh sci-viz-hotreload-dev.sh
        elif echo "${MODE}" | grep -iE PROD &>/dev/null; then
          sh sci-viz-hotreload-prod.sh
        else
            echo "Unexpected mode..."
            exit 1
        fi
  localdb:
    image: datajoint/mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=pharus
    volumes:
      - ./pharus/tests/init/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - main
  fakeservices.datajoint.io:
    image: datajoint/nginx:v0.2.6
    environment:
      - ADD_pharus_TYPE=REST
      - ADD_pharus_ENDPOINT=pharus:5000
      - ADD_pharus_PREFIX=/api
      - ADD_sciviz_TYPE=REST
      - ADD_sciviz_ENDPOINT=sci-viz:3000
      - ADD_sciviz_PREFIX=/
      - HTTPS_PASSTHRU=TRUE
    ports:
      - '443:443'
      - '80:80'
    networks:
      - main
  pharus:
    depends_on:
      localdb:
        condition: service_healthy
    extends:
      file: ./pharus/docker-compose-build.yaml
      service: pharus
    environment:
      - FLASK_ENV=development # enables logging to console from Flask
      - PHARUS_SPEC_PATH=specs/test_spec.yaml # for dynamic api spec
      - PHARUS_MODE=DEV
      - PHARUS_USER
      - PHARUS_HOST
      - PHARUS_PASSWORD
      - PHARUS_OIDC_CLIENT_SECRET
      - PHARUS_OIDC_CLIENT_ID
      - PHARUS_OIDC_REDIRECT_URI
      - PHARUS_OIDC_CODE_VERIFIER
      - PHARUS_OIDC_TOKEN_URL
      - PHARUS_OIDC_PUBLIC_KEY
      - PHARUS_OIDC_SUBJECT_KEY=preferred_username
    env_file: ./.env
    volumes:
      - ./test:/tmp/test
      - ./test/test_spec.yaml:/main/specs/test_spec.yaml
      - ./pharus-hotreload-dev.sh:/main/specs/pharus-hotreload-dev.sh
      # - ./test/test.avi:/main/specs/test.avi
    command:
      - sh
      - -lc
      - |
        python /tmp/test/populate.py
        sh ./specs/pharus-hotreload-dev.sh
    networks:
      - main
networks:
  main:
